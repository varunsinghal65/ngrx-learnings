import { ShoppingAction, ShoppingActionTypes } from "../actions/shopping-actions";
import { ShoppingItem } from "../models/shopping-item.model";

//With the old state we could not track the errors generated by the http calls.
//we also would not know if the call has happened or is still happening.
//So we store allt hs info in our new modified state
export interface ShoppingState {
    list: ShoppingItem[],
    loading: boolean,
    error: Error
}

const initialState : ShoppingState = {
    list : [],
    loading : false,
    error: undefined
};

export function ShoppingReducer(
    state: ShoppingState = initialState,
    action: ShoppingAction) {
        switch(action.type) {
            case ShoppingActionTypes.LOAD_SHOPPING:
                return {
                    ...state,
                    loading: true
                }
            case ShoppingActionTypes.LOAD_SHOPPING_SUCCESS:
                return {
                    ...state,
                    list: action.payload,
                    loading : false
                }
            case ShoppingActionTypes.LOAD_SHOPPING_FAILURE:
                return {
                    ...state,
                    error : action.payload,
                    loading : false
                }
            case ShoppingActionTypes.ADD_ITEM:
                return {
                    ...state,
                    loading : true
                }    
            case ShoppingActionTypes.ADD_ITEM_SUCCESS:
                return {
                    ...state, 
                    list: [...state.list, action.payload], 
                    loading: false
                };
            case ShoppingActionTypes.ADD_ITEM_FAILURE:
                return {
                    ...state,
                    loading : false,
                    error : action.payload
                }
            case ShoppingActionTypes.DELETE_ITEM : 
                return {
                    ...state,
                    loading : false
                } 
            case ShoppingActionTypes.DELETE_ITEM_SUCCESS:
                return {
                    ...state,
                    list : state.list.filter((shoppingItem)=>shoppingItem.id !== action.payload), 
                    loading: false
                };                    
            case ShoppingActionTypes.ADD_ITEM_FAILURE : 
                return {
                    ...state,
                    loading: false,
                    error : action.payload
                }       
            default:
                return state;   
        }
}